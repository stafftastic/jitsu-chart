apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jitsu.fullname" . }}-ingest
  labels:
    {{- include "jitsu.labels" . | nindent 4 }}
spec:
  {{- if not .Values.ingest.autoscaling.enabled }}
  replicas: {{ .Values.ingest.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "jitsu.selectorLabels" . | nindent 6 }}
      {{- include "jitsu.ingest.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with (merge (deepCopy .Values.ingest.podAnnotations) .Values.global.podAnnotations) }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jitsu.selectorLabels" . | nindent 8 }}
        {{- include "jitsu.ingest.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jitsu.serviceAccountName" . }}
      {{- with (.Values.ingest.podSecurityContext | default .Values.global.podSecurityContext) }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.tokenGenerator.enabled }}
        - name: wait-for-tokens
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          args: ["job-wr", "{{ include "jitsu.fullname" . }}-token-generator-{{ include "jitsu.hash" . }}"]
        {{- end }}
        {{- if .Values.clickhouse.enabled }}
        - name: wait-for-clickhouse
          {{- with (.Values.ingest.securityContext | default .Values.global.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          args: ["service", "{{ .Release.Name }}-clickhouse"]
        {{- end }}
        {{- if .Values.redis.enabled }}
        - name: wait-for-redis
          {{- with (.Values.ingest.securityContext | default .Values.global.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          args: ["service", "{{ .Release.Name }}-redis-master"]
        {{- end }}
        {{- if .Values.kafka.enabled }}
        - name: wait-for-kafka
          {{- with (.Values.ingest.securityContext | default .Values.global.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          args: ["service", "{{ .Release.Name }}-kafka"]
        {{- end }}
        {{- if .Values.console.enabled }}
        - name: wait-for-console
          {{- with (.Values.ingest.securityContext | default .Values.global.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          args: ["service", "{{ include "jitsu.fullname" . }}-console"]
        {{- end }}
        {{- if .Values.rotor.enabled }}
        - name: wait-for-rotor
          {{- with (.Values.ingest.securityContext | default .Values.global.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          args: ["service", "{{ include "jitsu.fullname" . }}-rotor"]
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with (.Values.ingest.securityContext | default .Values.global.securityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.ingest.image.repository }}:{{ .Values.ingest.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ingest.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.ingest.service.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.ingest.service.metricsPort }}
              protocol: TCP
          {{- if .Values.ingest.probes.enabled }}
          livenessProbe:
            httpGet:
              port: http
              path: /health
          readinessProbe:
            httpGet:
              port: http
              path: /health
          {{- end }}
          {{- if .Values.ingest.envFrom }}
          envFrom:
            {{- toYaml .Values.ingest.envFrom | nindent 12 }}
          {{- end }}
          env:
            {{- if and .Values.config.enabled .Values.ingest.config.enabled }}
            {{- include "jitsu.ingest.env" . | nindent 12 }}
            {{- end }}
            {{- with .Values.ingest.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with (.Values.ingest.resources | default .Values.global.resources) }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with (.Values.ingest.nodeSelector | default .Values.global.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (.Values.ingest.affinity | default .Values.global.affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (.Values.ingest.tolerations | default .Values.global.tolerations) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ingest.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- if kindIs "string" . }}
        {{- tpl . $ | nindent 8 }}
        {{- else }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
